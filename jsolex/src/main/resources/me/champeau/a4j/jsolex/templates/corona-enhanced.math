#
# Enhanced corona image script using histogram-aware stretching.
# This script generates a corona image using Fe XIV line at 5302.86 Å.
# It must be executed in batch mode. For this to work, you must have
# a relatively small cropping window which includes the dark Fe I line
# at 5302.29 Å and the Fe XIV line at 5302.86 Å.
# Take a large number of images (e.g 50, 100 or more) and this script
# will automatically extract the corona image from the average of all.
# Adjust the continuum shifts (c1 and c2) if necessary, depending on your
# setup and the quality of your images.
#
# This version uses the new histogram_stretch function which automatically
# detects dominant peaks (offset, disk fill, continuum) and focuses
# stretching on the weak corona signal, making results independent of
# the offset value used.
#

# Reference (darkest line) of the scan (in Å)
feI=5302.29
# Corona-E line (in Å)
feXIV=5302.86
# Continuum shift 1 (in Å)
c1=5301.84
# Continuum shift 2 (in Å)
c2=5303.44
# Fe XIV FWHM (in Å)
feXIV_fwhm=0.2

[tmp]
shift=find_shift(feXIV, feI)
rng=a2px(feXIV_fwhm)
# Used to avoid negative values when doing continuum substraction
offset=12000
# Denoised Fe XIV image
fe_14=avg(range(shift-rng;shift+rng;rng/2))
# Continuum image
cont=avg(img(find_shift(feI;c1));img(find_shift(feI;c2)))
# Difference between Fe image and continuum
diff=(offset+fe_14)-cont

[outputs]
# Using histogram-aware stretching for offset-independent corona extraction
# Parameters:
# - sensitivity=2.0: Enhanced sensitivity for weak corona signals
# - target_bg=0.15: Darker background to highlight corona features
# - peak_threshold=0.02: Detect peaks with >2% of total pixels
# - peak_width_factor=0.05: Exclude 5% range around each peak
masked=histogram_stretch(disk_fill(diff;offset); sensitivity=2.0; target_bg=0.15; peak_threshold=0.02; peak_width_factor=0.05)

# Alternative with different parameters for comparison
# masked_alt=histogram_stretch(disk_fill(diff;offset); sensitivity=1.5; target_bg=0.2)

[[batch]]
# amplification
expo=2

[tmp]
avg=avg(radius_rescale(equalize(masked)))

[outputs]
corona=disk_fill(linear_stretch(pow(avg,expo)))
corona_rot=rotate_rad(corona; angleP)
legend=draw_text(corona_rot; 16;32;
   "%OBSERVER%
%DATE%"
;32; "FFFFFF")